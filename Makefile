
# See https://github.com/enterprise-contract/hacks
HACKS_DIR=../hacks
RECORDINGS_DIR=$(HACKS_DIR)/provenance/recordings

run-for-recording-%:
	@opa eval data.main.main \
	  -i $(RECORDINGS_DIR)/$*/attestation.json \
	  -d main.rego \
	  -d lib/ \
	  -f pretty

run-01: run-for-recording-01-SLSA-v0-2-Pipeline-in-cluster
run-05: run-for-recording-05-SLSA-v1-0-tekton-build-type-Pipeline-in-cluster

run: run-01 run-05

compare:
	@-diff <($(MAKE) run-01) <($(MAKE) run-05)

#-----------------------------------------------------------------------------

# Convert some recorded attestation to embedded rego so they
# can be used for unit tests.
TEST_DATA=lib/slsa/tekton/test_data.rego

# Clears the file and adds the package command
init-test-data:
	@( \
	  echo '# ** Do not edit this file. Regenerate it using `make sync-test-data` **'; \
	  echo "package slsa.tekton.test_data"; \
	) > $(TEST_DATA)

# Appends to the file and use opa fmt to format it
test-data-%:
	@( export F="$*" && echo -n "att_$${F//-/_} := " && jq . $(RECORDINGS_DIR)/$*/attestation.json ) >> $(TEST_DATA)
	@opa fmt --write $(TEST_DATA)

# There are other attestation file in https://github.com/enterprise-contract/hacks/provenance/recordings
# but these two are the most useful for testing currently
sync-test-data-01: test-data-01-SLSA-v0-2-Pipeline-in-cluster
sync-test-data-05: test-data-05-SLSA-v1-0-tekton-build-type-Pipeline-in-cluster

sync-test-data: init-test-data sync-test-data-01 sync-test-data-05
